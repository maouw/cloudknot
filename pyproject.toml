 [project]
name = "cloudknot"
dynamic = ["version"]
requires-python = ">=3.10"
license = { file = "LICENSE" }
authors = [{ name = "Adam Richie-Halford", email = "richiehalford@gmail.com" }]
maintainers = [
	{ name = "Adam Richie-Halford", email = "richiehalford@gmail.com" },
]
description = "Cloudknot: a python library designed to run your existing python code on AWS Batch"
readme = "README.md"
classifiers = [
	"Development Status :: 3 - Alpha",
	"Environment :: Console",
	"Intended Audience :: Science/Research",
	"License :: OSI Approved :: MIT License",
	"Operating System :: OS Independent",
	"Programming Language :: Python",
	"Topic :: Scientific/Engineering",
]
dependencies = [
	"awscli>=1.32.65,<2",
	"boto3>=1.34.65,<2",
	"botocore>=1.34.65,<2",
	"boto3-stubs[essential,batch,ecs,ecr,iam]>=1.34.65,<2",
	"cloudpickle>=3.0.0,<4",
	"docker>=7.0.0,<8",
	"packaging>=24.0.0,<25",
	"pipreqs>=0.4.13,<0.5",
	"tenacity>=8.2.3,<9",
]

[project.urls]
"Homepage" = "https://nrdg.github.io/cloudknot"
"Source" = "https://github.com/nrdg/cloudknot"

[project.optional-dependencies]
dev = [
	"coverage>=7.4,<8",
	"moto[cloudformation]==4.1.5",
	"numpydoc>=1.6.0,<2",
	"pre-commit>=3.6.2,<4",
	"pytest-cov>=4.1.0,<5",
	"pytest-xdist[psutil]==2.1.0",
	"pytest>=8.0.0,<9",
 	"ruff>=0.3.4,<1",
	"sphinx>=5.3.0,<6",
]

maint = ["rapidfuzz>=3.6.2,<4"]
examples = ["ipykernel>=6.29.3,<7", "numpy>=1.26.4,<2"]

[project.scripts]
cloudknot = "cloudknot.cli:main"

[build-system]
requires = ["setuptools>=69.1.0", "wheel>=0.43.0", "setuptools_scm>=8.0.3"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]

[tool.setuptools]
package-data = { "cloudknot" = [
	"data/*",
	"data/*/*",
	"data/*/*/*",
	"data/*/*/*/*",
	"templates/*",
] }

[tool.pytest.ini_options]
addopts = "--doctest-modules"
norecursedirs = "cloudknot/data"

[tool.ruff]
line-length = 88
target-version = "py310"
include = ["pyproject.toml", "cloudknot/**/*.py"]
show-fixes = true
output-format = "full"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint]
select = [
	"C90",	 	# mccabe
	"E",	 	# pycodestyle
	"F", 	 	# pyflakes
	"W", 	 	# pycodestyle
	"B", 	 	# flake8-bugbear
	"D",	 	# pydocstyle
#	"ISC", 	 	# flake8-implicit-str-concat
#	"YTT", 	 	# flake8-2020 for misuse of sys.version or sys.version_info
#	"BLE", 	 	# flake8-blind-except
#	"A", 	 	# flake8-builtins
#	"C4", 	 	# flake8-comprehensions
#	"DTZ", 	 	# flake8-datetimez
	#"G", 	 	# flake8-logging-format
	#"PT", 	 	# flake8-pytest-style
	"Q", 	 	# flake8-quotes
#	"RET", 	 	# flake8-return
#	"SIM", 	 	# flake8-simplify
#	"ARG", 	 	# flake8-unused-arguments
	"PL", 	 	# pylint
#	"FLY002", 	# flynt: static-join-to-f-string
#	"LOG", 	 	# flake8-logging
#	"RUF", 	 	# ruff-specific
#	"PERF",  	# Perflint
#	"I" 	 	# isort
]

extend-ignore = [
	"E501",
	"N802",
	"N806",
	"E203",
	"C408",
	"PLE1205",
	"ISC001",
	"RUF005",
	"FLY002",
	"PLR0913",
	"PLR2004",
	"PLR0912",
	"PLR0915",
	"PLR0917",
	"PLR",
	"C901",
	"PERF203",
	"B904",
	"PLW1514",
]

[tool.ruff.lint.extend-per-file-ignores]
"cloudknot/_version.py" = ["D"]
"cloudknot/aws/__init__.py" = ["F403"]
"cloudknot/aws/*.py" = ["D"]

"cloudknot/data/*" = ["D"]
"cloudknot/commands/*" = ["D"]
"cloudknot/tests/*" = ["D"]
"cloudknot/cli.py" = ["PLC"]
"cloudknot/cloudknot.py" = ["F841"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"
