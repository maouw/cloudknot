[project]
name = "cloudknot"
dynamic = ["version"]
requires-python = ">=3.10"
license = { file = "LICENSE" }
authors = [{ name = "Adam Richie-Halford", email = "richiehalford@gmail.com" }]
maintainers = [
	{ name = "Adam Richie-Halford", email = "richiehalford@gmail.com" }
]
description = "Cloudknot: a python library designed to run your existing python code on AWS Batch"
readme = "README.md"
classifiers = [
	"Development Status :: 3 - Alpha",
	"Environment :: Console",
	"Intended Audience :: Science/Research",
	"License :: OSI Approved :: MIT License",
	"Operating System :: OS Independent",
	"Programming Language :: Python",
	"Topic :: Scientific/Engineering"
]
dependencies = [
	"boto3>=1.34.55,<2",
	"botocore>=1.34.55,<2",
	"cloudpickle>=3.0.0,<4",
	"docker>=7.0.0,<8",
	"pipreqs==0.4.13",
	"tenacity>=8.2.3,<9",
]

[project.urls]
"Homepage" = "https://nrdg.github.io/cloudknot"
"Source" = "https://github.com/nrdg/cloudknot"

[project.optional-dependencies]
dev = [
	"coverage>=7.4,<8",
	"numpydoc>=1.6.0,<2",
	"moto[cloudformation]==4.1.5",
	"pre-commit>=3.6.2,<4",
	"ruff>=0.3.1,<1",
	"pytest-cov>=4.1.0,<5",
	"pytest-xdist[psutil]==2.1.0",
	"pytest>=8.0.0,<9",
	"sphinx==5.0.0",
]
maint = ["rapidfuzz>=3.6.2,<4"]

[project.scripts]
cloudknot = "cloudknot.cli:main"

[build-system]
requires = ["setuptools", "wheel", "setuptools_scm[toml]"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]

[tool.setuptools]
package-data = { "cloudknot" = [
	"data/*",
	"data/*/*",
	"data/*/*/*",
	"data/*/*/*/*",
	"templates/*"
] }

[tool.pytest.ini_options]
addopts = "--doctest-modules"
norecursedirs = "src/cloudknot/data"

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py310"
extend-exclude = [".*", "*.egg-info", "build", "doc",  "examples", "cloudknot/data", "cloudknot/_version.py", "cloudknot/cli.py"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
#extend-ignore = ["W191", "E111", "E114", "E117", "D206", "D300", "Q000", "Q001", "Q002", "Q003", "COM812", "COM819", "ISC001", "ISC002"]

[tool.ruff.lint]
select = [
	"C90", # mccabe
	"D", # pydocstyle
	"E", # pycodestyle
	"W", # pycodestyle
	"F", # pyflakes
	"B", # flake8-bugbear
	"ISC", # flake8-implicit-str-concat
	"YTT", # flake8-2020 for misuse of sys.version or sys.version_info
	#"S", # flake8-bandit
	"BLE", # flake8-blind-except
	"A", # flake8-builtins
	"C4", # flake8-comprehensions
	"DTZ", # flake8-datetimez
	"G", # flake8-logging-format
	"PT", # flake8-pytest-style
	"Q", # flake8-quotes
	"RET", # flake8-return
	"SIM", # flake8-simplify
	"ARG", # flake8-unused-arguments
	"PL", # pylint
	"FLY002", # flynt: static-join-to-f-string
#	"FURB", # refurb
	"LOG", # flake8-logging
	"RUF", # ruff-specific
]
extend-ignore = ["E501", "N802", "N806", "E203", "C408","PLE1205", "ISC001"]#, "W191", "E111", "E114", "E117", "D206", "D300", "Q000", "Q001", "Q002", "Q003", "COM812", "COM819", "ISC001"]#, "ISC002"]


[tool.ruff.lint.extend-per-file-ignores]
# Also ignore `E402` in all `__init__.py` files.
"cloudknot/*/*" = ["D"]
#"cloudknot"

[tool.ruff.lint.pydocstyle]
convention = "numpy"

